:host {
    display: block;
    width: 100%;
    height: 100%;
    min-height: 100%;
    overflow: hidden;
}

.diagram-container {
    width: 100%;
    height: 100%;
    min-height: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    padding: 20px;
    box-sizing: border-box;
}

.flow-diagram {
    display: block;
    width: 100%;
    height: auto;
    min-height: 100%;
    background: var(--mat-sys-surface-container-lowest);
    border-radius: 8px;
}

.service-group {
    .service-box {
        fill: var(--mat-sys-surface-container-high);
        stroke: var(--mat-sys-outline);
        stroke-width: 1;
    }

    .service-label {
        fill: var(--mat-sys-on-surface);
        font-size: 11px;
        font-weight: 500;
    }

    &.originator {
        .service-box {
            stroke: var(--mat-sys-primary);
            fill: color-mix(in srgb, var(--mat-sys-primary) 15%, var(--mat-sys-surface-container-high));
        }
    }

    &.responder {
        .service-box {
            stroke: var(--mat-sys-secondary);
            fill: color-mix(in srgb, var(--mat-sys-secondary) 15%, var(--mat-sys-surface-container-high));
        }
    }

    &.listener {
        .service-box {
            stroke: var(--mat-sys-tertiary);
            fill: color-mix(in srgb, var(--mat-sys-tertiary) 15%, var(--mat-sys-surface-container-high));
        }
    }

    &.broker {
        .service-box {
            stroke: var(--mat-sys-outline);
            fill: color-mix(in srgb, var(--mat-sys-outline) 15%, var(--mat-sys-surface-container-high));
            stroke-width: 2;
            stroke-dasharray: 2 2;
        }
    }
}

.lifeline {
    stroke: var(--mat-sys-outline-variant);
    stroke-width: 1;
    stroke-dasharray: 4 4;
}

.message-line {
    stroke-width: 2;

    &.request {
        stroke: var(--mat-sys-primary);
        &:not(.isBrokerInput) {
            stroke-dasharray: 2 2;
        }
    }

    &.response {
        stroke: var(--mat-sys-secondary);
        &:not(.isBrokerInput) {
            stroke-dasharray: 2 2;
        }
    }

    &.publish {
        stroke: var(--mat-sys-tertiary);
        &:not(.isBrokerInput) {
            stroke-dasharray: 2 2;
        }
    }
}

.message-arrow {
    &.request {
        fill: var(--mat-sys-primary);
    }

    &.response {
        fill: var(--mat-sys-secondary);
    }

    &.publish {
        fill: var(--mat-sys-tertiary);
    }
}

.status-symbol {
    &.error {
        color: #f44336;  // error red
    }

    &.timeout, &.dropped {
        color: #ff9800;  // warning orange
    }
}

.message-label {
    text-anchor: middle;
    font-size: 11px;
    fill: var(--mat-sys-on-surface);
}

.timestamp {
    text-anchor: middle;
    font-size: 10px;
    fill: var(--mat-sys-on-surface-variant);
}